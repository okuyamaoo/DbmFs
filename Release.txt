Version:0.0.7


・Readonlyモードをサポート
起動オプションとして全てのテーブルをReadonlyでマウントするモードを追加
不意のファイル操作などで更新が行われないようにすることが可能
  オプション名：-readonly
  指定値     ：true/false (デフォルト true)


・独自で記述したSELECTクエリの結果をテーブルとしてマウントするViewdirオプションを追加
テーブル全件ではなくテーブルにあらかじめ検索条件を適応した状態のデータセットを確認したい場合や
複数のテーブルをJOINした結果を確認した場合はなどに利用する想定。
※Viewdirオプションで作成したテーブルのデータは更新することは不可
  オプション名：-viewdir
  指定値     ：マウント時のディレクトリ名/selectクエリ/リザルトデータの一意になるカラム名
  指定値(例) ："JoinView/select t1.col1 as t1col1,t2.col1 as t2col1,t1.col2 as t1col2 ,t2.col2 as t2col2 from tbl1 t1 inner join tbl2 t2 on t1.col1 = t2.col1/t1col1"


・件数が多いテーブルへのディレクトリ内のファイル一覧への対応
旧バージョンではテーブル内のレコードはディレクトリを開くと全てファイルとして表示されていましたが、
この場合大量のレコードが存在する場合は表示が完了するのに非常に時間がかかっていました。
その為本バージョンから100件を超えるレコードがある場合テーブル名のディレクトリを開いた場合は
100件までのレコード分のファイルを表示し、100件を超えるレコードを格納する[100_]という
ディレクトリを表示する様にしました。
[100_]ディレクトリ内には残りのレコードが全て格納されています。


・トランザクションスコープの見直し
データの更新や削除等の処理時の内部的なトランザクションスコープを見直しました。
旧バージョンでは特定の更新処理失敗時のデータが誤って消えてしまう挙動があったため。


・ReadMe.mdのMySQLをマウントする際の例Jdbcドライバの引数に「zeroDateTimeBehavior=convertToNull」を追加
Timestampなどを扱う際にDBのデータに"0000-00-00 00:00:00"と入っている際にデータ取得時にエラーと
なってしまうためこの引数により明示的にNULLとしてデータを取得するように挙動を制御出来る。


・多くのバグを修正

-------
Version:0.0.6

・ファイルコピーによるテーブルも含めたデータコピーをサポート
マウント先しているデータベースにテーブルが存在しない場合であっても
別のマウントディレクトリからディレクトリごとペーストすることで、
テーブルを自動作成する機能を追加。
詳しくはReadMe.mdの「ファイルコピー&ペーストによるテーブルの複製」部分に
手順を記載しています。

ファイルをペーストする際はディレクトリ名を含めることで
当該ディレクトリ名のテーブルがデータベースに存在しない場合は自動的に作成されます。


・PostgreSQLに対応
PostgreSQLに対応しました。
マウント時はPostgreSQLに対応したJDBCドライバーとドライバー名、接続文字列を指定してください。
以下がマウント時のコマンドの例になります。

>LD_LIBRARY_PATH=./:/usr/local/lib java -classpath ./dbmfs-0.0.6-jar-with-dependencies.jar:
>./fuse-j.jar:./commons-logging-1.0.4.jar:./commons-dbutils-1.6.jar:./postgresql-9.4-1201.jdbc4.jar 
>-Dorg.apache.commons.logging.Log=fuse.logging.FuseLog -Dfuse.logging.level=INFO -Xmx512m -Xms512m 
>-server -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseParNewGC org.dbmfs.DbmFsMain 
>-f -o allow_other -o big_writes -o max_read=1300000 /var/tmp/fusemnt -dbdriver org.postgresql.Driver 
>-dburl jdbc:postgresql://localhost/testdb -dbuser dbmfs -dbpass 'dbmfs'


・デーベース間の互換性
  MySQL と PostgreSQL 間で互換性に対応しているため、MySQLをマウントしディレクトリごとコピーし
  PostgreSQLをマウントしているディレクトリにペースとすることでデータベース移行が可能です。
  PostgreSQLからMySQLへの移行も同様に可能です。
  
-------
Version:0.0.5

更新系処理にてディレクトリコピーをサポート

ディレクトリコピーを行った場合テーブルコピーに
なるため、DbmFsを2つマウントしディレクトリをマウントディレクトリToマウントディレクトリと
することでテーブルごと移行することが可能となります。
移行先にあらかじめテーブルが存在しなくても自動的にテーブルを作成しデータをコピーします。

-------
Version:0.0.4

更新系初リリース

対応データベース:MySQL
対応文字コード:UTF-8
操作:参照及び、テーブル定義あらかじめ存在するフォルダに対してのファイルコピーによるデータ登録、更新

-------
Version:0.0.1, 0.0.2, 0.0.3

初リリース

対応データベース:MySQL
対応文字コード:UTF-8
操作:参照のみ対応
